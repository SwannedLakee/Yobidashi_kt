name: Run Gradle on PRs and Pushes
on: 
  push:
    branches:
      - main
      - ci/github_actions # temporary

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.check_release.outputs.tag_title }}
    steps:
      - uses: actions/checkout@v4
      - name: Check if release exists
        id: check_release
        env:
          TZ: 'Asia/Tokyo'
          GH_TOKEN: ${{ github.token }}
        run: |
          current_date=$(date "+%Y%m%d")
          tag_title="2.0.83_${current_date}"
          echo "tag_title=${tag_title}" >> $GITHUB_OUTPUT
          RELEASE_EXISTS=$(curl -s -H "Authorization: token ${GH_TOKEN}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${{ github.repository }}/releases/tags/${tag_title}" | jq -r '.message')
          if [[ "$RELEASE_EXISTS" == "Not Found" ]]; then
            echo "release_exists=false" >> $GITHUB_OUTPUT
            echo "Release ${tag_title} does not exist. I will create it on next step."
          else
            echo "release_exists=true" >> $GITHUB_OUTPUT
            echo "Release ${tag_title} already exists, skipping creation."
          fi
        shell: bash
      - name: Create Release
        id: create_release
        if: steps.check_release.outputs.release_exists == 'false'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ steps.check_release.outputs.tag_title }} --title ${{ steps.check_release.outputs.tag_title }}
        shell: bash

  build:
    needs: release
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install
        timeout-minutes: 3
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '21'

      - name: Download Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 35
          build-tools: 35.0.0

      - name: Prepare credentials
        timeout-minutes: 1
        run: |
          mkdir app/credentials
          echo "${{ secrets.RELEASE_KEYSTORE }}" | base64 -d > ./app/credentials/release_keystore.jks

      - name: Grant permission of Gradle wrapper
        timeout-minutes: 20
        run: chmod +x gradlew

      - name: Build Release APK
        timeout-minutes: 20
        run: |
          ./gradlew assembleRelease
        env:
          _JAVA_OPTIONS: '-Duser.language=ja -Duser.country=JP'
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: Clean up credentials
        timeout-minutes: 1
        if: ${{ always() }}
        run: |
          rm app/credentials/release_keystore.jks
          rm -r app/credentials

      - name: Upload artifact
        timeout-minutes: 2
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: Release APK
          path: |
            app/release/*.apk

      - name: Upload artifact to release
        timeout-minutes: 5
        if: ${{ success() }}
        env:
          GH_TOKEN: ${{ github.token }}
          RELEASE_TAG: ${{ needs.release.outputs.release_tag }}
        run: |
          tag_title=$RELEASE_TAG
          gh release upload ${tag_title} app/release/*.apk --clobber
        shell: bash

      - name: Upload Kotlin build report
        timeout-minutes: 2
        uses: actions/upload-artifact@v4
        with:
          name: Kotlin build report-${{ runner.os }}
          path: |
            build/reports/kotlin-build

  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: install
        timeout-minutes: 3
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '21'
          cache: gradle

      - name: Grant permission of Gradle wrapper
        run: chmod +x gradlew

      - name: Coverage
        timeout-minutes: 15
        env:
          TZ: 'Asia/Tokyo'
          _JAVA_OPTIONS: '-Duser.language=ja -Duser.country=JP -Duser.timezone=Asia/Tokyo'
        run: "./gradlew testDebugUnitTest jacocoTestReport jacocoMergedTestReport"

      - name: Upload Unit Test Results
        timeout-minutes: 3
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: Unit Test Results
          path: |
            build/reports/tests

      - name: Upload Kover Results
        timeout-minutes: 3
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: Kover Results
          path: |
            build/reports/jacoco

      - name: Upload Kotlin build report
        timeout-minutes: 2
        uses: actions/upload-artifact@v4
        with:
          name: Kotlin build report-test
          path: |
            build/reports/kotlin-build
