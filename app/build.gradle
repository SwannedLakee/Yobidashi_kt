apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.triplet.play'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'io.fabric'
apply plugin: "jacoco"

apply from: 'signing/config.gradle', to: android

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    byte verMajor  = 1
    byte verMiddle = 4
    byte verMinor  = 31

    defaultConfig {
        applicationId "jp.toastkid.yobidashi"
        minSdkVersion 19
        targetSdkVersion 29
        if (verMiddle >= 100 || verMinor >= 10_000) {
            throw new IllegalStateException("Middle and Minor version value is allowed under 100.")
        }
        versionCode ((verMajor * 1_000_000) + (verMiddle * 10_000) + verMinor)
        versionName "${verMajor}.${verMiddle}.${verMinor}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            minifyEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-debug.pro'
            applicationIdSuffix ".d"
            manifestPlaceholders = [app_name: "Xobidashi"]
            versionNameSuffix = ".d"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [app_name: "@string/app_name"]
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

play {
    track = 'alpha'
    serviceAccountEmail = 'tk-bot@api-6327630184664180575-715630.iam.gserviceaccount.com'
    serviceAccountCredentials = file('signing/api-6327630184664180575-715630-73af1e35d196.p12')
}

dependencies {
    implementation project(":lib")
    implementation project(":article")
    implementation project(":search")

    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "androidx.fragment:fragment:$libVersions.fragment"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.exifinterface:exifinterface:1.1.0"
    implementation "androidx.work:work-runtime:2.3.0"
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    implementation "androidx.webkit:webkit:1.2.0"

    implementation "androidx.room:room-runtime:$libVersions.room"
    kapt "androidx.room:room-compiler:$libVersions.room"

    implementation "com.google.android.material:material:$libVersions.material"

    implementation "com.google.android.gms:play-services-oss-licenses:17.0.0"

    implementation 'com.google.android:flexbox:2.0.1'

    implementation "androidx.core:core-ktx:$libVersions.ktx"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$libVersions.coroutines"
    implementation "com.jakewharton.timber:timber:$libVersions.timber"
    implementation 'com.larswerkman:HoloColorPicker:1.5'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.journeyapps:zxing-android-embedded:3.5.0'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.squareup.moshi:moshi:1.8.0'
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.retrofit2:converter-moshi:2.6.2'
    implementation 'org.jsoup:jsoup:1.10.3'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    testImplementation "junit:junit:$libVersions.junit"
    testImplementation "org.robolectric:robolectric:$libVersions.robolectric"
    testImplementation "io.mockk:mockk:$libVersions.mockk"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$libVersions.coroutines_test"
}

repositories{
    flatDir{
        dirs 'libs'
    }
}

kapt {
    javacOptions {
        option("-Xmaxerrs", 5000)
    }
}

jacoco {
    toolVersion = "0.8.5"
}

task jacocoTestReport(
        type: JacocoReport,
        dependsOn: "testDebugUnitTest",
        group: "verification"
) {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    getSourceDirectories().from = "${projectDir}/src/main/java"
    getClassDirectories().from = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug")
    getExecutionData().from = "${buildDir}/jacoco/testDebugUnitTest.exec"
}

apply plugin: 'com.google.gms.google-services'
